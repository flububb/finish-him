<?xml version="1.0"?>

<!--
     This is a build.xml file for building the FinishHim plugin.

     The 'dist' target compiles the plugin and creates the JAR file.
     Before running the 'dist' target, you will need to generate the
     documentation using one of these two targets:

     - 'docs-xalan': Creates documentation using the Xalan XSLT processor
     - 'docs-xsltproc': Creates documentation using the xsltproc tool

     To use it for building your own plugin, make these changes:

     - Change definition of 'jar.name' to the name of your plugin's JAR file
     - If necessary, add any dependencies to the 'project.class.path'
       definition
     - If necessary, change the list of files in the 'dist' targtet
     - If necessary, change the 'docs-xalan' and 'docs-xsltproc' targets
       accordingly.
-->

<project name="finish-him" default="dist" basedir=".">
	<property file="build.properties"/>
	<property file="../build.properties"/>

	<property name="jar.name"  value="${ant.project.name}.jar"/>
	<property name="version"  value="0.1"/>

	<property name="src.dir" value="."/>
	<property name="build.dir" value="build"/>

	<property name="jedit.install.dir"  value=".."/>
	<property name="jedit.jars.dir"  value="${jedit.install.dir}/jars"/>

	<property environment="env"/>

	<property name="scala.lib.dir" location="${env.SCALA_HOME}/lib"/>

	<path id="scala.classpath">
		<pathelement location="${scala.lib.dir}/scala-compiler.jar"/>
		<pathelement location="${scala.lib.dir}/scala-library.jar"/>
	</path>

	<path id="project.classpath">
		<path refid="scala.classpath" />
		<pathelement location="${jedit.install.dir}/jedit.jar"/> 
	</path>

	<target name="init">
		<!-- Scala compiler task -->
		<taskdef resource="scala/tools/ant/antlib.xml">
			<classpath refid="scala.classpath" />
		</taskdef>
	</target>

	<target name="build" depends="init">
		<mkdir dir="${build.dir}"/>
		<scalac
			srcdir="${src.dir}"
			destdir="${build.dir}"
			classpathref="project.classpath"
			deprecation="on"
		>
		</scalac>
	</target>


	<target name="dist" depends="build">
		<!-- <mkdir dir="${install.dir}"/> -->
		<jar jarfile="${install.dir}/${jar.name}">
			<fileset dir="${build.dir}"/>
			<fileset dir="${src.dir}">
				<include name="actions.xml"/>
				<include name="**/*.props"/>
				<include name="**/*.html"/>
			</fileset>
		</jar>
	</target>

	<target name="clean">
		<delete dir="${build.dir}"/>
		<delete file="${srcfile}"/>
		<delete>
			<fileset dir="." includes="**/*~" defaultexcludes="no"/>
			<!--fileset dir="." includes="**/*.html" defaultexcludes="no"/-->
		</delete>
	</target>
</project>
